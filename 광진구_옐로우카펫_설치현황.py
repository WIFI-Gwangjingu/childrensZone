# -*- coding: utf-8 -*-
"""광진구 옐로우카펫 설치현황.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PBeQ3T6w2Wscj-AlhP9iWCQQt5Pyit1-
"""

from google.colab import drive
drive.mount('/content/drive')

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

df = pd.read_csv('/content/drive/MyDrive/공모전/광진구/서울특별시 광진구_옐로우카펫 설치 현황_20230102.csv',encoding ='euc-kr' )
df

df.info()

#결측치 확인
df.isnull().sum()

#컬럼 제거
df.drop(['연번','설치년도','관리기관','전화번호','데이터기준일자'],inplace=True,axis=1)
df

#데이터프레임 주소값 추출
address = df['도로명 주소']
address

####### 도로명주소 위도 경도 값으로 바꿔주기 ########
from geopy.geocoders import Nominatim
geo_local = Nominatim(user_agent='South Korea')

# 위도, 경도 반환하는 함수
def geocoding(address):
    try:
        geo = geo_local.geocode(address)
        x_y = [geo.latitude, geo.longitude]
        return x_y

    except:
        return [0,0]

#####주소를 위,경도 값으로 변환하기 #####
latitude = []
longitude =[]

for i in address:
    latitude.append(geocoding(i)[0])
    longitude.append(geocoding(i)[1])

#####Dataframe만들기######
address_df = pd.DataFrame({'설치학교': df['설치학교명'],'도로명 주소':df['도로명 주소'],'위도':latitude,'경도':longitude})

#df저장
address_df.to_csv('Gwangjingu_yellowcarpet.csv')

address_df

address_df['설치학교'].value_counts()

#위도경도 같은 값인 중복 데이터 제거
address_df.drop_duplicates(['위도'])
address_df.drop_duplicates(['경도'])

address_df.columns = ['설치학교','주소','위도','경도']

address_df



address_df.to_csv('광진구 옐로카펫 설치 좌표.csv',encoding='utf-8-sig',index = False)